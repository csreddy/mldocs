<apidoc:module name="StatusBuiltins" category="Server Monitoring" lib="xdmp" xmlns:apidoc="http://marklogic.com/xdmp/apidoc"><apidoc:summary access="public">
  The Server Monitoring built-in functions include functions that provide
  monitoring information about internal conditions of MarkLogic Server and
  includes the <code xmlns="http://www.w3.org/1999/xhtml">xdmp:request-cancel</code> function which is used to
  cancel a running request.
</apidoc:summary><apidoc:function name="host-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns the status of a host<span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a JSON node</span>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong*">
    A host ID.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(host-status)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:usage schema="host-status.xsd" camel-case="true">
   <p xmlns="http://www.w3.org/1999/xhtml">The information returned from 
   <span class="xquery"><code>xdmp:host-status</code></span>
   <span class="javascript"><code>xdmp.hostStatus</code></span> is always
   computed on the host specified in the <code>$host-id</code> parameter,
   even if the call is evaluated on an App Server running on a different host.
   That is, when the API call is issued, MarkLogic Server communicates with
   the specified host for the its status and returns the status from the
   perspective of the specified host (not from the perspective of the host
   in which the XQuery API is evaluated).
   <span class="javascript">The individual statuses are of type ObjectNode.</span>
</p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:host-status(xdmp:host("raymond.marklogic.com"))
=&gt;
&lt;host-status xmlns="http://marklogic.com/xdmp/status/host"&gt;
  &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
  &lt;host-name&gt;raymond.marklogic.com&lt;/host-name&gt;
  &lt;group-id&gt;18323836549784872587&lt;/group-id&gt;
  &lt;current-time&gt;2007-02-16T18:50:43.422-08:00&lt;/current-time&gt;
  &lt;bind-port&gt;7999&lt;/bind-port&gt;
  &lt;connect-port&gt;7999&lt;/connect-port&gt;
  &lt;ssl-fips-enabled&gt;false&lt;/ssl-fips-enabled&gt;
  &lt;foreign-bind-port&gt;7998&lt;/foreign-bind-port&gt;
  &lt;foreign-connect-port&gt;7998&lt;/foreign-connect-port&gt;
  &lt;background-io-limit&gt;0&lt;/background-io-limit&gt;
  &lt;metering-enabled&gt;true&lt;/metering-enabled&gt;
  &lt;meters-database&gt;11672493194876031987&lt;/meters-database&gt;
  &lt;performance-metering-enabled&gt;false&lt;/performance-metering-enabled&gt;
  &lt;performance-metering-period&gt;1&lt;/performance-metering-period&gt;
  &lt;performance-metering-retain-raw&gt;1&lt;/performance-metering-retain-raw&gt;
  &lt;performance-metering-retain-hourly&gt;7&lt;/performance-metering-retain-hourly&gt;
  &lt;performance-metering-retain-daily&gt;31&lt;/performance-metering-retain-daily&gt;
  &lt;memory&gt;4096&lt;/memory&gt;
  &lt;last-startup&gt;2007-02-16T18:39:00.642-08:00&lt;/last-startup&gt;
  &lt;version&gt;3.2-20070214&lt;/version&gt;
  &lt;architecture&gt;i686&lt;/architecture&gt;
  &lt;license-key&gt;ABC-123-XYZ&lt;/license-key&gt;
  &lt;licensee&gt;Raymond - MarkLogic&lt;/licensee&gt;
  &lt;license-key-expires&gt;2007-04-14T00:00:00-08:00&lt;/license-key-expires&gt;
  &lt;license-key-cpus&gt;2&lt;/license-key-cpus&gt;
  &lt;license-key-cores&gt;4&lt;/license-key-cores&gt;
  &lt;license-key-size&gt;0&lt;/license-key-size&gt;
  &lt;license-key-options&gt;
    &lt;license-key-option&gt;conversion&lt;/license-key-option&gt;
    &lt;license-key-option&gt;failover&lt;/license-key-option&gt;
    &lt;license-key-option&gt;French&lt;/license-key-option&gt;
    &lt;license-key-option&gt;German&lt;/license-key-option&gt;
    &lt;license-key-option&gt;Italian&lt;/license-key-option&gt;
    &lt;license-key-option&gt;Spanish&lt;/license-key-option&gt;
    &lt;license-key-option&gt;Russian&lt;/license-key-option&gt;
    &lt;license-key-option&gt;Arabic&lt;/license-key-option&gt;
    &lt;license-key-option&gt;Simplified Chinese&lt;/license-key-option&gt;
    &lt;license-key-option&gt;English&lt;/license-key-option&gt;
  &lt;/license-key-options&gt;
  &lt;pre-release-expires&gt;2007-05-15T05:08:59-08:00&lt;/pre-release-expires&gt;
  &lt;edition&gt;Essential Enterprise&lt;/edition&gt;
  &lt;environment&gt;production&lt;/edition&gt;
  &lt;cpus&gt;1&lt;/cpus&gt;
  &lt;cores&gt;4&lt;/cores&gt;
  &lt;core-threads&gt;8&lt;/core-threads&gt;
  &lt;host-size&gt;197&lt;/host-size&gt;
  &lt;log-device-space&gt;3592&lt;/log-device-space&gt;
  &lt;data-dir-space&gt;3592&lt;/data-dir-space&gt;
  &lt;config-file-timestamps&gt;
    &lt;groups-timestamp&gt;1978290846354&lt;/groups-timestamp&gt;
    &lt;hosts-timestamp&gt;354793208466&lt;/hosts-timestamp&gt;
    &lt;databases-timestamp&gt;1995470715538&lt;/databases-timestamp&gt;
    &lt;assignments-timestamp&gt;1832261958290&lt;/assignments-timestamp&gt;
    &lt;tokenizer-timestamp&gt;0&lt;/tokenizer-timestamp&gt;
    &lt;mimetypes-timestamp&gt;0&lt;/mimetypes-timestamp&gt;
  &lt;/config-file-timestamps&gt;
  &lt;http-servers&gt;
    &lt;http-server&gt;
      &lt;http-server-id&gt;15847393982828089978&lt;/http-server-id&gt;
      &lt;port&gt;9032&lt;/port&gt;
      &lt;webDAV&gt;true&lt;/webDAV&gt;
    &lt;/http-server&gt;
    &lt;http-server&gt;
      &lt;http-server-id&gt;17360064376275143119&lt;/http-server-id&gt;
      &lt;port&gt;8000&lt;/port&gt;
      &lt;webDAV&gt;false&lt;/webDAV&gt;
    &lt;/http-server&gt;
    &lt;http-server&gt;
      &lt;http-server-id&gt;4492507232107144149&lt;/http-server-id&gt;
      &lt;port&gt;8001&lt;/port&gt;
      &lt;webDAV&gt;false&lt;/webDAV&gt;
    &lt;/http-server&gt;
  &lt;/http-servers&gt;
  &lt;xdbc-servers&gt;
    &lt;xdbc-server&gt;
      &lt;xdbc-server-id&gt;4057681084273905496&lt;/xdbc-server-id&gt;
      &lt;port&gt;8021&lt;/port&gt;
    &lt;/xdbc-server&gt;
    &lt;xdbc-server&gt;
      &lt;xdbc-server-id&gt;6086706739056900422&lt;/xdbc-server-id&gt;
      &lt;port&gt;8050&lt;/port&gt;
    &lt;/xdbc-server&gt;
  &lt;/xdbc-servers&gt;
  &lt;odbc-servers&gt;
    &lt;odbc-server&gt;
      &lt;odbc-server-id&gt;10668593228373915027&lt;/odbc-server-id&gt;
      &lt;port&gt;5432&lt;/port&gt;
    &lt;/odbc-server&gt;
  &lt;/odbc-servers&gt;
  &lt;task-server&gt;
    &lt;task-server-id&gt;10441203546898933382&lt;/task-server-id&gt;
  &lt;/task-server&gt;
  &lt;assignments&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;bill&lt;/forest-name&gt;
      &lt;forest-id&gt;11413686728343849399&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;Security&lt;/forest-name&gt;
      &lt;forest-id&gt;11436840116662532973&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;Triggers&lt;/forest-name&gt;
      &lt;forest-id&gt;6800799099781840925&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;Documents&lt;/forest-name&gt;
      &lt;forest-id&gt;12434840716430044697&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;test&lt;/forest-name&gt;
      &lt;forest-id&gt;8050247748004050993&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;Modules&lt;/forest-name&gt;
      &lt;forest-id&gt;2413699485643173169&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
    &lt;assignment&gt;
      &lt;forest-name&gt;Schemas&lt;/forest-name&gt;
      &lt;forest-id&gt;6668879474270284963&lt;/forest-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
    &lt;/assignment&gt;
  &lt;/assignments&gt;
  &lt;hosts&gt;
    &lt;host&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
      &lt;host-name&gt;raymond.marklogic.com&lt;/host-name&gt;
      &lt;connect-port&gt;7999&lt;/connect-port&gt;
      &lt;online&gt;true&lt;/online&gt;
      &lt;secure&gt;true&lt;/online&gt;
    &lt;/host&gt;
  &lt;/hosts&gt;
  &lt;backup-jobs/&gt;
  &lt;restore-jobs/&gt;
&lt;/host-status&gt;
</pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.hostStatus(xdmp.host());
=&gt;
{
  "hostId":"2485368722774099257",
  "hostName":"raymond.marklogic.com",
  "groupId":"1875668225877553285",
  "zone":"",
  "currentTime":"2014-12-17T19:39:39.404605-08:00",
  "bindPort":7999,
  "connectPort":7999,
  "sslFipsEnabled":true,
  "foreignBindPort":7998,
  "foreignConnectPort":7998,
  "backgroundIoLimit":0,
  "meteringEnabled":true,
  "metersDatabase":"8273642434352718502",
  "performanceMeteringEnabled":true,
  "performanceMeteringPeriod":60,
  "performanceMeteringRetainRaw":7,
  "performanceMeteringRetainHourly":30,
  "performanceMeteringRetainDaily":90,
  "lastStartup":"2014-12-17T13:46:40.314577-08:00",
  "version":"8.0-20141217",
  "architecture":"x86_64",
  "platform":"linux",
  "licenseKey":"",
  "licensee":"",
  "licenseKeyCpus":0,
  "licenseKeyCores":0,
  "licenseKeySize":0,
  "licenseKeyOptions":[
    "English"
  ],
  "preReleaseExpires":"2015-03-17T01:00:55-08:00",
  "edition":"Essential Enterprise",
  "environment":"developer",
  "cpus":1,
  "cores":2,
  "coreThreads":2,
  "totalCpuStatUser":{
    "value":0.358961522579193
  },
  "totalCpuStatNice":{
    "value":0.0166958831250668
  },
  "totalCpuStatSystem":{
    "value":0.225394427776337
  },
  "totalCpuStatIdle":{
    "value":99.3321685791016
  },
  "totalCpuStatIowait":{
    "value":0.0166958831250668
  },
  "totalCpuStatIrq":{
    "value":0
  },
  "totalCpuStatSoftirq":{
    "value":0
  },
  "totalCpuStatSteal":{
    "value":0.0500876531004906
  },
  "totalCpuStatGuest":{
    "value":0
  },
  "totalCpuStatGuestNice":{
    "value":0
  },
  "cpuStatUser":{
    "value":0.434346824884415,
    "id":1
  },
  "cpuStatUser":{
    "value":0.283758968114853,
    "id":2
  },
  "cpuStatNice":{
    "value":0.016705647110939,
    "id":1
  },
  "cpuStatNice":{
    "value":0.016691705211997,
    "id":2
  },
  "cpuStatSystem":{
    "value":0.16705647110939,
    "id":1
  },
  "cpuStatSystem":{
    "value":0.267067283391953,
    "id":2
  },
  "cpuStatIdle":{
    "value":99.3317718505859,
    "id":1
  },
  "cpuStatIdle":{
    "value":99.3490219116211,
    "id":2
  },
  "cpuStatIowait":{
    "value":0,
    "id":1
  },
  "cpuStatIowait":{
    "value":0.050075113773346,
    "id":2
  },
  "cpuStatIrq":{
    "value":0,
    "id":1
  },
  "cpuStatIrq":{
    "value":0,
    "id":2
  },
  "cpuStatSoftirq":{
    "value":0,
    "id":1
  },
  "cpuStatSoftirq":{
    "value":0,
    "id":2
  },
  "cpuStatSteal":{
    "value":0.0501169413328171,
    "id":1
  },
  "cpuStatSteal":{
    "value":0.0333834104239941,
    "id":2
  },
  "cpuStatGuest":{
    "value":0,
    "id":1
  },
  "cpuStatGuest":{
    "value":0,
    "id":2
  },
  "cpuStatGuestNice":{
    "value":0,
    "id":1
  },
  "cpuStatGuestNice":{
    "value":0,
    "id":2
  },
  "memoryProcessSize":{
    "value":4408
  },
  "memoryProcessRss":{
    "value":1368
  },
  "memoryProcessAnon":{
    "value":3956
  },
  "memoryProcessRssHwm":{
    "value":1514
  },
  "memoryProcessSwapRate":{
    "value":0
  },
  "memorySystemPageinRate":{
    "value":0.0666403025388718
  },
  "memorySystemPageoutRate":{
    "value":4.7981014251709
  },
  "memorySystemSwapinRate":{
    "value":0
  },
  "memorySystemSwapoutRate":{
    "value":0
  },
  "memorySize":4096,
  "hostSize":1234,
  "hostLargeDataSize":0,
  "logDeviceSpace":5202,
  "dataDirSpace":5202,
  "configFileTimestamps":{
    "groupsTimestamp":"14188530876759320",
    "hostsTimestamp":"14188530861654680",
    "databasesTimestamp":"14188530893722060",
    "assignmentsTimestamp":"14188530861583840",
    "tokenizerTimestamp":0,
    "mimetypesTimestamp":0
  },
  "httpServers":[
    {
      "httpServerId":"16410760008133871361",
      "port":8001,
      "webDAV":false
    },
    {
      "httpServerId":"17968977724269221518",
      "port":2222,
      "webDAV":false
    },
    {
      "httpServerId":"536121115905064034",
      "port":8000,
      "webDAV":false
    },
    {
      "httpServerId":"16662539550385649512",
      "port":7997,
      "webDAV":false
    },
    {
      "httpServerId":"5834497626853209270",
      "port":8002,
      "webDAV":false
    },
    {
      "httpServerId":"18127344729549022960",
      "port":1234,
      "webDAV":false
    }
  ],
  "xdbcServers":[
  ],
  "odbcServers":[
  ],
  "taskServer":{
    "taskServerId":"7004822397158976297"
  },
  "assignments":[
    {
      "forestName":"Meters",
      "forestId":"12847756301291276987",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Documents",
      "forestId":"18080252238750949856",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Fab",
      "forestId":"18134217630916328931",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Extensions",
      "forestId":"294202739810711200",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Last-Login",
      "forestId":"16156462908043304635",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"test",
      "forestId":"15032873714652460194",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"bill",
      "forestId":"7201957734358937355",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Triggers",
      "forestId":"15959633394350124086",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Schemas",
      "forestId":"7095821375622266302",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Modules",
      "forestId":"13841158287176766572",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"App-Services",
      "forestId":"14712989954136260582",
      "hostId":"2485368722774099257"
    },
    {
      "forestName":"Security",
      "forestId":"3369505132918154964",
      "hostId":"2485368722774099257"
    }
  ],
  "hosts":[
    {
      "hostId":"2485368722774099257",
      "hostName":"raymond.marklogic.com",
      "connectPort":7999,
      "online":true,
      "secure":false
    }
  ],
  "transactions":[
    {
      "transactionId":"17103128519048241586",
      "hostId":"2485368722774099257",
      "serverId":"536121115905064034",
      "transactionName":"",
      "transactionMode":"update",
      "transactionTimestamp":0,
      "transactionState":"active",
      "databaseId":"12466402192567279933",
      "canceled":false,
      "startTime":"2014-12-17T19:39:39-08:00",
      "timeLimit":600,
      "maxTimeLimit":3600,
      "joinSize":0,
      "user":"7071164303237443533",
      "admin":true
    },
    {
      "transactionId":"13192178034415869546",
      "hostId":"2485368722774099257",
      "serverId":"536121115905064034",
      "transactionName":"",
      "transactionMode":"query",
      "transactionTimestamp":"14188739405228240",
      "transactionState":"active",
      "databaseId":"18210430083193679484",
      "canceled":false,
      "startTime":"2014-12-17T19:39:39-08:00",
      "timeLimit":600,
      "maxTimeLimit":3600,
      "joinSize":0,
      "user":"7071164303237443533",
      "admin":true
    }
  ],
  "backupJobs":[
  ],
  "restoreJobs":[
  ],
  "native-plugins":[
  ],
  "queryReadBytes":21856220,
  "queryReadTime":"PT6.221009S",
  "queryReadRate":0,
  "queryReadLoad":0,
  "journalWriteBytes":113672812,
  "journalWriteTime":"PT5.076739S",
  "journalWriteRate":0,
  "journalWriteLoad":0,
  "saveWriteBytes":43230507,
  "saveWriteTime":"PT1.469835S",
  "saveWriteRate":0,
  "saveWriteLoad":0,
  "mergeReadBytes":169313792,
  "mergeReadTime":"PT0.2101S",
  "mergeReadRate":0,
  "mergeReadLoad":0,
  "mergeWriteBytes":249017814,
  "mergeWriteTime":"PT3.503278S",
  "mergeWriteRate":0,
  "mergeWriteLoad":0,
  "backupReadBytes":0,
  "backupReadTime":"PT0S",
  "backupReadRate":0,
  "backupReadLoad":0,
  "backupWriteBytes":0,
  "backupWriteTime":"PT0S",
  "backupWriteRate":0,
  "backupWriteLoad":0,
  "restoreReadBytes":0,
  "restoreReadTime":"PT0S",
  "restoreReadRate":0,
  "restoreReadLoad":0,
  "restoreWriteBytes":0,
  "restoreWriteTime":"PT0S",
  "restoreWriteRate":0,
  "restoreWriteLoad":0,
  "largeReadBytes":0,
  "largeReadTime":"PT0S",
  "largeReadRate":0,
  "largeReadLoad":0,
  "largeWriteBytes":0,
  "largeWriteTime":"PT0S",
  "largeWriteRate":0,
  "largeWriteLoad":0,
  "externalBinaryReadBytes":0,
  "externalBinaryReadTime":"PT0S",
  "externalBinaryReadRate":0,
  "externalBinaryReadLoad":0,
  "xdqpClientReceiveBytes":0,
  "xdqpClientReceiveTime":"PT0S",
  "xdqpClientReceiveRate":0,
  "xdqpClientReceiveLoad":0,
  "xdqpClientSendBytes":0,
  "xdqpClientSendTime":"PT0S",
  "xdqpClientSendRate":0,
  "xdqpClientSendLoad":0,
  "xdqpServerReceiveBytes":0,
  "xdqpServerReceiveTime":"PT0S",
  "xdqpServerReceiveRate":0,
  "xdqpServerReceiveLoad":0,
  "xdqpServerSendBytes":0,
  "xdqpServerSendTime":"PT0S",
  "xdqpServerSendRate":0,
  "xdqpServerSendLoad":0,
  "foreignXdqpClientReceiveBytes":0,
  "foreignXdqpClientReceiveTime":"PT0S",
  "foreignXdqpClientReceiveRate":0,
  "foreignXdqpClientReceiveLoad":0,
  "foreignXdqpClientSendBytes":0,
  "foreignXdqpClientSendTime":"PT0S",
  "foreignXdqpClientSendRate":0,
  "foreignXdqpClientSendLoad":0,
  "foreignXdqpServerReceiveBytes":0,
  "foreignXdqpServerReceiveTime":"PT0S",
  "foreignXdqpServerReceiveRate":0,
  "foreignXdqpServerReceiveLoad":0,
  "foreignXdqpServerSendBytes":0,
  "foreignXdqpServerSendTime":"PT0S",
  "foreignXdqpServerSendRate":0,
  "foreignXdqpServerSendLoad":0,
  "readLockCount":90878,
  "readLockWaitTime":"PT0.233242S",
  "readLockHoldTime":"PT30M34.3731452S",
  "readLockRate":0,
  "readLockWaitLoad":0,
  "readLockHoldLoad":0,
  "writeLockCount":4078,
  "writeLockWaitTime":"PT0.004132S",
  "writeLockHoldTime":"PT3M23.7514429S",
  "writeLockRate":0.0219789296388626,
  "writeLockWaitLoad":0,
  "writeLockHoldLoad":0,
  "deadlockCount":0,
  "deadlockWaitTime":"PT0S",
  "deadlockRate":0,
  "deadlockWaitLoad":0
}
</pre>
</apidoc:example>
  </apidoc:function><apidoc:function name="host-get-ssl-fips-enabled" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns whether fips mode is enabled.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong*">
    Host IDs.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:boolean*</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:usage>
   <p xmlns="http://www.w3.org/1999/xhtml">The information returned from <code>xdmp:host-get-ssl-fips-enabled</code>
   is always computed on the host specified in the <code>$host-id</code>
   parameter, even if the call is evaluated on an App Server running on a
   different host. That is, when the API call is issued, MarkLogic Server
   communicates with the specified host for the boolean value whether fips mode
   is enabled in it and returns the boolean value from the perspective of the
   specified host (not from the perspective of the host in which the XQuery API
   is evaluated).  </p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:host-get-ssl-fips-enabled(xdmp:host("raymond.marklogic.com"))
=&gt; true
</pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.hostGetSslFipsEnabled(xdmp.host("raymond.marklogic.com"));
=&gt; true
</pre>
</apidoc:example>
  </apidoc:function><apidoc:function name="cache-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns the status of the caches<span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a ValueIterator of ObjectNodes</span>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong*" optional="true">
    A host ID. Default value is the local host.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(cache-status)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:cache-status()
=&gt;
&lt;cache-status xmlns="http://marklogic.com/xdmp/status/cache"&gt;
  &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
  &lt;host-name&gt;raymond.marklogic.com&lt;/host-name&gt;
  &lt;compressed-tree-cache-partitions&gt;
    &lt;compressed-tree-cache-partition&gt;
      &lt;partition-size&gt;32&lt;/partition-size&gt;
      &lt;partition-table&gt;53.9&lt;/partition-table&gt;
      &lt;partition-used&gt;46.2&lt;/partition-used&gt;
      &lt;partition-free&gt;53&lt;/partition-free&gt;
      &lt;partition-overhead&gt;0.8&lt;/partition-overhead&gt;
    &lt;/compressed-tree-cache-partition&gt;
  &lt;/compressed-tree-cache-partitions&gt;
  &lt;expanded-tree-cache-partitions&gt;
    &lt;expanded-tree-cache-partition&gt;
      &lt;partition-size&gt;32&lt;/partition-size&gt;
      &lt;partition-table&gt;81.2&lt;/partition-table&gt;
      &lt;partition-busy&gt;0&lt;/partition-busy&gt;
      &lt;partition-used&gt;89.7&lt;/partition-used&gt;
      &lt;partition-free&gt;6.2&lt;/partition-free&gt;
      &lt;partition-overhead&gt;4.1&lt;/partition-overhead&gt;
    &lt;/expanded-tree-cache-partition&gt;
  &lt;/expanded-tree-cache-partitions&gt;
  &lt;list-cache-partitions&gt;
    &lt;list-cache-partition&gt;
      &lt;partition-size&gt;32&lt;/partition-size&gt;
      &lt;partition-table&gt;0.1&lt;/partition-table&gt;
      &lt;partition-busy&gt;0&lt;/partition-busy&gt;
      &lt;partition-used&gt;0.1&lt;/partition-used&gt;
      &lt;partition-free&gt;99.9&lt;/partition-free&gt;
      &lt;partition-overhead&gt;0&lt;/partition-overhead&gt;
    &lt;/list-cache-partition&gt;
  &lt;/list-cache-partitions&gt;
&lt;/cache-status&gt;
</pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.cacheStatus();
=&gt;
{
  "hostId":"2485368722774099257",
  "hostName":"danny-1.marklogic.com",
  "compressedTreeCachePartitions":[
    {
      "partitionSize":64,
      "partitionTable":1.89999997615814,
      "partitionUsed":4,
      "partitionFree":96,
      "partitionOverhead":0
    }
  ],
  "expandedTreeCachePartitions":[
    {
      "partitionSize":128,
      "partitionTable":5.40000009536743,
      "partitionBusy":0,
      "partitionUsed":91,
      "partitionFree":8.69999980926514,
      "partitionOverhead":0.300000011920929
    }
  ],
  "listCachePartitions":[
    {
      "partitionSize":128,
      "partitionTable":1,
      "partitionBusy":0,
      "partitionUsed":1.20000004768372,
      "partitionFree":98.8000030517578,
      "partitionOverhead":0
    }
  ],
  "tripleCache":{
    "tripleCachePartitions":[
      {
        "partitionSize":128,
        "partitionBusy":0,
        "partitionUsed":0,
        "partitionFree":99.9000015258789
      }
    ]
  },
  "tripleValueCache":{
    "tripleValueCachePartitions":[
      {
        "partitionSize":64,
        "partitionBusy":0,
        "partitionUsed":0,
        "partitionFree":99.8000030517578
      }
    ]
  }
}
</pre>
</apidoc:example>
  </apidoc:function><apidoc:function name="forest-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns the status of a forest<span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a ValueIterator of ObjectNodes</span>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="forest-id" type="xs:unsignedLong*">
    One or more forest IDs.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(forest-status)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:usage schema="forest-status.xsd" camel-case="true">
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:forest-status(xdmp:forest("Documents"))
=&gt;
&lt;forest-status xmlns="http://marklogic.com/xdmp/status/forest"&gt;
  &lt;forest-id&gt;12434840716430044697&lt;/forest-id&gt;
  &lt;forest-name&gt;Documents&lt;/forest-name&gt;
  &lt;state&gt;open&lt;/state&gt;
  &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
  &lt;database-id&gt;2634450243966805432&lt;/database-id&gt;
  &lt;last-state-change&gt;2007-02-16T18:39:31.267-08:00&lt;/last-state-change&gt;
  &lt;journals-size&gt;57&lt;/journals-size&gt;
  &lt;stands&gt;
    &lt;stand&gt;
      &lt;stand-id&gt;15174447282968484759&lt;/stand-id&gt;
      &lt;path&gt;c:\Program Files\MarkLogic\Data\Forests\Documents\00000016&lt;/path&gt;
      &lt;stand-kind&gt;Active&lt;/stand-kind&gt;
      &lt;label-version&gt;50397184&lt;/label-version&gt;
      &lt;disk-size&gt;11&lt;/disk-size&gt;
      &lt;memory-size&gt;1&lt;/memory-size&gt;
      &lt;list-cache-hits&gt;158&lt;/list-cache-hits&gt;
      &lt;list-cache-misses&gt;105&lt;/list-cache-misses&gt;
      &lt;list-cache-hit-rate&gt;0&lt;/list-cache-hit-rate&gt;
      &lt;list-cache-miss-rate&gt;0&lt;/list-cache-miss-rate&gt;
      &lt;compressed-tree-cache-hits&gt;0&lt;/compressed-tree-cache-hits&gt;
      &lt;compressed-tree-cache-misses&gt;0&lt;/compressed-tree-cache-misses&gt;
      &lt;compressed-tree-cache-hit-rate&gt;0&lt;/compressed-tree-cache-hit-rate&gt;
      &lt;compressed-tree-cache-miss-rate&gt;0&lt;/compressed-tree-cache-miss-rate&gt;
    &lt;/stand&gt;
  &lt;/stands&gt;
  &lt;current-time&gt;2007-02-16T18:44:06.154-08:00&lt;/current-time&gt;
  &lt;merges/&gt;
  &lt;reindexing&gt;false&lt;/reindexing&gt;
  &lt;device-space&gt;3592&lt;/device-space&gt;
  &lt;backups/&gt;
  &lt;transaction-coordinators/&gt;
  &lt;transaction-participants/&gt;
&lt;/forest-status&gt;
</pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.forestStatus(
  xdmp.databaseForests(
    xdmp.database("Documents")));
=&gt;
{
   "forestId":"3199975194245760821",
   "forestName":"Documents",
   "hostId":"16691872130013704340",
   "state":"open",
   "enabled":true,
   "availability":"online",
   "updatesAllowed":"all",
   "rebalancerEnable":true,
   "lowerBound":"1",
   "upperBound":"100",
   "masterForest":"3199975194245760821",
   "replicaForests":[
   ],
   "currentMasterForest":"3199975194245760821",
   "currentMasterPreciseTime":"2014-11-24T16:58:05.766563-08:00",
   "currentMasterFsn":144,
   "databaseId":"1137197755037514772",
   "lastStateChange":"2014-11-25T18:13:16.300032-08:00",
   "nonblockingTimestamp":"14169680666077180",
   "dataDir":"/space/trunk-xdmp/src/Data",
   "journalsSize":0,
   "largeDataSize":0,
   "orphanedBinaries":0,
   "stands":[
      {
         "standId":"6976269206355638804",
         "path":"/space/trunk-xdmp/src/Data/Forests/Documents/00000002",
         "standKind":"Active",
         "isFast":false,
         "labelVersion":50397184,
         "diskSize":0,
         "memorySize":1,
         "listCacheHits":122,
         "listCacheMisses":308,
         "listCacheHitRate":0.0244068801403046,
         "listCacheMissRate":0.0506149381399155,
         "compressedTreeCacheHits":0,
         "compressedTreeCacheMisses":0,
         "compressedTreeCacheHitRate":0,
         "compressedTreeCacheMissRate":0,
         "tripleCacheHits":0,
         "tripleCacheMisses":0,
         "tripleCacheHitRate":0,
         "tripleCacheMissRate":0,
         "tripleValueCacheHits":0,
         "tripleValueCacheMisses":0,
         "tripleValueCacheHitRate":0,
         "tripleValueCacheMissRate":0
      }
   ],
   "forestReserve":0,
   "currentTime":"2014-11-25T18:14:53.211604-08:00",
   "merges":[
   ],
   "rebalancing":false,
   "reindexing":false,
   "deviceSpace":223489,
   "backups":[
   ],
   "transactionCoordinators":[
   ],
   "transactionParticipants":[
   ],
   "transactionJournalSize":0,
   "transactionJournalLimit":134152192,
   "queryReadBytes":17360,
   "queryReadTime":"PT0.000046S",
   "queryReadRate":0,
   "queryReadLoad":0,
   "journalWriteBytes":0,
   "journalWriteTime":"PT0S",
   "journalWriteRate":0,
   "journalWriteLoad":0,
   "saveWriteBytes":0,
   "saveWriteTime":"PT0S",
   "saveWriteRate":0,
   "saveWriteLoad":0,
   "mergeReadBytes":0,
   "mergeReadTime":"PT0S",
   "mergeReadRate":0,
   "mergeReadLoad":0,
   "mergeWriteBytes":0,
   "mergeWriteTime":"PT0S",
   "mergeWriteRate":0,
   "mergeWriteLoad":0,
   "backupReadBytes":0,
   "backupReadTime":"PT0S",
   "backupReadRate":0,
   "backupReadLoad":0,
   "backupWriteBytes":0,
   "backupWriteTime":"PT0S",
   "backupWriteRate":0,
   "backupWriteLoad":0,
   "restoreReadBytes":0,
   "restoreReadTime":"PT0S",
   "restoreReadRate":0,
   "restoreReadLoad":0,
   "restoreWriteBytes":0,
   "restoreWriteTime":"PT0S",
   "restoreWriteRate":0,
   "restoreWriteLoad":0,
   "largeReadBytes":0,
   "largeReadTime":"PT0S",
   "largeReadRate":0,
   "largeReadLoad":0,
   "largeWriteBytes":0,
   "largeWriteTime":"PT0S",
   "largeWriteRate":0,
   "largeWriteLoad":0,
   "databaseReplicationReceiveBytes":0,
   "databaseReplicationReceiveTime":"PT0S",
   "databaseReplicationReceiveRate":0,
   "databaseReplicationReceiveLoad":0,
   "databaseReplicationSendBytes":0,
   "databaseReplicationSendTime":"PT0S",
   "databaseReplicationSendRate":0,
   "databaseReplicationSendLoad":0,
   "readLockCount":0,
   "readLockWaitTime":"PT0S",
   "readLockHoldTime":"PT0S",
   "readLockRate":0,
   "readLockWaitLoad":0,
   "readLockHoldLoad":0,
   "writeLockCount":0,
   "writeLockWaitTime":"PT0S",
   "writeLockHoldTime":"PT0S",
   "writeLockRate":0,
   "writeLockWaitLoad":0,
   "writeLockHoldLoad":0,
   "deadlockCount":0,
   "deadlockWaitTime":"PT0S",
   "deadlockRate":0,
   "deadlockWaitLoad":0,
   "largeBinaryCacheHits":0,
   "largeBinaryCacheMisses":0,
   "largeBinaryCacheHitRate":0,
   "largeBinaryCacheMissRate":0
}
//----------------
{
   "forestId":"9838038749549278946",
   "forestName":"forest1",
   "hostId":"16691872130013704340",
   "state":"unmounted",
   "enabled":true,
   "availability":"offline",
   "databaseId":"1137197755037514772",
   "fragmentCount":99,
   "dataSize":15,
   "forestValueRange":{
      "elementReference":{
         "namespaceURI":"",
         "localname":"longfield",
         "scalarType":"long",
         "nullable":true
      }
   },
   "range":{
      "minimum":{
         "type":"long",
         "value":"1"
      },
      "maximum":{
         "type":"long",
         "value":"99"
      },
      "lowerBound":{
         "type":"long",
         "value":"1"
      },
      "upperBound":{
         "type":"long",
         "value":"100"
      }
   }
}
</pre>
</apidoc:example>
  </apidoc:function><apidoc:function name="forest-online" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns true if the specified forest is online with a state of 
  <code xmlns="http://www.w3.org/1999/xhtml">open</code>, <code xmlns="http://www.w3.org/1999/xhtml">open replica</code> or
  <code xmlns="http://www.w3.org/1999/xhtml">sync replicating</code> if isReplica is true, or
  <code xmlns="http://www.w3.org/1999/xhtml">syncing replica</code> if syncingOk is true,
  otherwise returns false.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="forestID" type="xs:unsignedLong">
    ID of the forest.
  </apidoc:param>
      <apidoc:param name="timestamp" type="xs:unsignedLong" optional="true">
    If the forest online status is older than the specified timestamp,
    consider it offline.
  </apidoc:param>
      <apidoc:param name="isReplica" type="xs:boolean" optional="true">
    Whether the forest is a replica.
  </apidoc:param>
      <apidoc:param name="syncingOk" type="xs:boolean" optional="true">
    Whether to return true if the forest is in "syncing replica" state.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:boolean</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:forest-online(xdmp:forest("Documents"))
  =&gt; true
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.forestOnline(xdmp.forest("Documents"));
  =&gt; true
</pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:forest-online(xdmp:forest("Documents"), 
    xdmp:wallclock-to-timestamp(fn:current-dateTime()), fn:true())
  =&gt; true if a forest is in open or sync-replicating state.
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.forestOnline(xdmp.forest("Documents"), 
     xdmp.wallclockToTimestamp(fn.currentDateTime()), true);
  =&gt; true if a forest is in open or sync-replicating state.
</pre></apidoc:example>
  </apidoc:function><apidoc:function name="server-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns the status of an app-server on a host<span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a ValueIterator of ObjectNodes</span>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong">
    A host ID.
  </apidoc:param>
      <apidoc:param name="server-id" type="xs:unsignedLong*">
    One or more server IDs (HTTP, XDBC, ODBC, webDAV, or Task).
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(server-status)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:usage schema="server-status.xsd" camel-case="true">
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:server-status(xdmp:host(),xdmp:server("Admin"))
=&gt;

&lt;server-status xmlns="http://marklogic.com/xdmp/status/server"&gt;
  &lt;server-id&gt;4492507232107144149&lt;/server-id&gt;
  &lt;server-name&gt;Admin&lt;/server-name&gt;
  &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
  &lt;server-kind&gt;http-server&lt;/server-kind&gt;
  &lt;port&gt;8009&lt;/port&gt;
  &lt;root&gt;Admin\&lt;/root&gt;
  &lt;modules&gt;0&lt;/modules&gt;
  &lt;database&gt;5496769417926491762&lt;/database&gt;
  &lt;last-login&gt;9823948029384029384&lt;/last-login&gt;
  &lt;display-last-login&gt;true&lt;/display-last-login&gt;
  &lt;backlog&gt;512&lt;/backlog&gt;
  &lt;threads&gt;2&lt;/threads&gt;
  &lt;max-threads&gt;32&lt;/max-threads&gt;
  &lt;request-timeout&gt;30&lt;/request-timeout&gt;
  &lt;keep-alive-timeout&gt;5&lt;/keep-alive-timeout&gt;
  &lt;session-timeout&gt;3600&lt;/session-timeout&gt;
  &lt;max-time-limit&gt;3600&lt;/max-time-limit&gt;
  &lt;default-time-limit&gt;600&lt;/default-time-limit&gt;
  &lt;max-inference-size&gt;500&lt;/max-inference-size&gt;
  &lt;default-inference-size&gt;100&lt;/default-inference-size&gt;
  &lt;authentication&gt;basic&lt;/authentication&gt;
  &lt;default-user&gt;8216129598321388485&lt;/default-user&gt;
  &lt;privilege&gt;0&lt;/privilege&gt;
  &lt;default-xquery-version&gt;1.0-ml&lt;/default-xquery-version&gt;
  &lt;current-time&gt;2007-03-29T14:43:00.819-07:00&lt;/current-time&gt;
  &lt;request-statuses&gt;
    &lt;request-status&gt;
      &lt;request-id&gt;15629296310429871822&lt;/request-id&gt;
      &lt;server-id&gt;4492507232107144149&lt;/server-id&gt;
      &lt;host-id&gt;13264574555735898770&lt;/host-id&gt;
      &lt;canceled&gt;false&lt;/canceled&gt;
      &lt;modules&gt;0&lt;/modules&gt;
      &lt;database&gt;5496769417926491762&lt;/database&gt;
      &lt;root&gt;Admin\&lt;/root&gt;
      &lt;request-kind&gt;invoke&lt;/request-kind&gt;
      &lt;request-text&gt;/cluster-status.xqy&lt;/request-text&gt;
      &lt;update&gt;false&lt;/update&gt;
      &lt;start-time&gt;2007-03-29T14:42:52.905-07:00&lt;/start-time&gt;
      &lt;user&gt;8216129598321388485&lt;/user&gt;
      &lt;client-address&gt;127.0.0.1&lt;/client-address&gt;
      &lt;trigger-depth&gt;0&lt;/trigger-depth&gt;
      &lt;expanded-tree-cache-hits&gt;0&lt;/expanded-tree-cache-hits&gt;
      &lt;expanded-tree-cache-misses&gt;0&lt;/expanded-tree-cache-misses&gt;
      &lt;request-state&gt;running&lt;/request-state&gt;
      &lt;profiling-allowed&gt;false&lt;/profiling-allowed&gt;
      &lt;profiling-enabled&gt;false&lt;/profiling-enabled&gt;
      &lt;debugging-allowed&gt;false&lt;/debugging-allowed&gt;
      &lt;debugging-status&gt;detached&lt;/debugging-status&gt;
    &lt;/request-status&gt;
  &lt;/request-statuses&gt;
  &lt;request-rate&gt;0.0639857&lt;/request-rate&gt;
  &lt;expanded-tree-cache-hits&gt;759&lt;/expanded-tree-cache-hits&gt;
  &lt;expanded-tree-cache-misses&gt;185&lt;/expanded-tree-cache-misses&gt;
  &lt;expanded-tree-cache-hit-rate&gt;0.272918&lt;/expanded-tree-cache-hit-rate&gt;
  &lt;expanded-tree-cache-miss-rate&gt;0&lt;/expanded-tree-cache-miss-rate&gt;
  &lt;fs-program-cache-hits&gt;9&lt;/fs-program-cache-hits&gt;
  &lt;fs-program-cache-misses&gt;40&lt;/fs-program-cache-misses&gt;
  &lt;db-program-cache-hits&gt;0&lt;/db-program-cache-hits&gt;
  &lt;db-program-cache-misses&gt;0&lt;/db-program-cache-misses&gt;
  &lt;env-program-cache-hits&gt;0&lt;/env-program-cache-hits&gt;
  &lt;env-program-cache-misses&gt;0&lt;/env-program-cache-misses&gt;
  &lt;fs-main-module-seq-cache-hits&gt;0&lt;/fs-main-module-seq-cache-hits&gt;
  &lt;fs-main-module-seq-cache-misses&gt;19&lt;/fs-main-module-seq-cache-misses&gt;
  &lt;db-main-module-seq-cache-hits&gt;0&lt;/db-main-module-seq-cache-hits&gt;
  &lt;db-main-module-seq-cache-misses&gt;0&lt;/db-main-module-seq-cache-misses&gt;
  &lt;fs-lib-module-cache-hits&gt;412&lt;/fs-lib-module-cache-hits&gt;
  &lt;fs-lib-module-cache-misses&gt;23&lt;/fs-lib-module-cache-misses&gt;
  &lt;db-lib-module-cache-hits&gt;0&lt;/db-lib-module-cache-hits&gt;
  &lt;db-lib-module-cache-misses&gt;0&lt;/db-lib-module-cache-misses&gt;
&lt;/server-status&gt; 
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.serverStatus(xdmp.host(), xdmp.server("Admin"));
=&gt;
{
 "serverId": "16410760008133871361",
 "serverName": "Admin",
 "hostId": "2485368722774099257",
 "serverKind": "http-server",
 "enabled": true,
 "port": 8001,
 "root": "Admin/",
 "modules": 0,
 "database": "6302398542082263257",
 "lastLogin": 0,
 "displayLastLogin": false,
 "backlog": 256,
 "threads": 1,
 "maxThreads": 32,
 "requestTimeout": 30,
 "keepAliveTimeout": 5,
 "sessionTimeout": 3600,
 "staticExpires": 3600,
 "maxTimeLimit": 10800,
 "defaultTimeLimit": 600,
 "maxInferenceSize": 500,
 "defaultInferenceSize": 100,
 "multiVersionConcurrencyControl": "contemporaneous",
 "distributeTimestamps": "fast",
 "authentication": "digest",
 "defaultUser": "10306463041007996463",
 "privilege": 0,
 "concurrentRequestLimit": 0,
 "defaultXqueryVersion": "0.9-ml",
 "currentTime": "2014-12-17T19:57:46.218358-08:00",
 "requestStatuses":
 [
 ]
 ,
 "requestRate": 0,
 "expandedTreeCacheHits": 4196,
 "expandedTreeCacheMisses": 547,
 "expandedTreeCacheHitRate": 0,
 "expandedTreeCacheMissRate": 0,
 "fsProgramCacheHits": 275,
 "fsProgramCacheMisses": 275,
 "dbProgramCacheHits": 0,
 "dbProgramCacheMisses": 0,
 "envProgramCacheHits": 0,
 "envProgramCacheMisses": 0,
 "fsMainModuleSeqCacheHits": 10,
 "fsMainModuleSeqCacheMisses": 10,
 "dbMainModuleSeqCacheHits": 0,
 "dbMainModuleSeqCacheMisses": 0,
 "fsLibModuleCacheHits": 1167,
 "fsLibModuleCacheMisses": 1167,
 "dbLibModuleCacheHits": 0,
 "dbLibModuleCacheMisses": 0,
 "hosts":
 [
 ]
 ,
 "outputSgmlCharacterEntities": "none",
 "outputEncoding": "UTF-8",
 "errorHandler": "/error-switch.xqy",
 "urlRewriter": "rewriter.xqy",
 "requestTime":
 {
 "value": 0
 }
}

</pre></apidoc:example>
  </apidoc:function><apidoc:function name="forest-counts" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns detailed forest statistics for a given forest
  <span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a ValueIterator of ObjectNodes</span>.
  This built-in may require significantly more processing
  time than <code xmlns="http://www.w3.org/1999/xhtml">xdmp:forest-status</code>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="forest-id" type="xs:unsignedLong*">
     A sequence of forest IDs.
  </apidoc:param>
      <apidoc:param name="show-elements" type="xs:string*" optional="true">
     The names of elements to be returned (the element names are listed
     in the Usage Notes below). Only the top-level elements that show
     counts are allowed (for example, <code xmlns="http://www.w3.org/1999/xhtml">stands-counts</code> or
     <code xmlns="http://www.w3.org/1999/xhtml">document-count</code>).
     The function will only perform the computations necessary to return the
     nodes specified.  If this parameter is not specified or is the empty
     sequence, then all statistics are calculated and returned for the forest.
     For each element name, you can specify a trailing * for wildcard matching.
     Specifying a * with no other text forces all calculations and
     returns all of the nodes.
  </apidoc:param>
      <apidoc:param name="options" type="xs:string*" optional="true">
     <p xmlns="http://www.w3.org/1999/xhtml">
      Options include:</p>
      <blockquote xmlns="http://www.w3.org/1999/xhtml"><dl>
        <dt>"preview-reindexer"</dt>
        <dd>return elements associated with reindexing even if
        the reindexer is not running.</dd>
        <dt>"preview-rebalancer"</dt>
        <dd>return elements associated with rebalancing even if
        the rebalancer is not running.</dd>
     </dl></blockquote>
     NOTE: these two options apply only when "show-elements" is empty.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(forest-counts)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
   <p xmlns="http://www.w3.org/1999/xhtml"><code>http://marklogic.com/xdmp/privileges/counts</code></p>
</apidoc:privilege>
    <apidoc:usage schema="forest-status.xsd" camel-case="true">
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:forest-counts(xdmp:forest("Documents"))
=&gt;
&lt;forest-counts xmlns="http://marklogic.com/xdmp/status/forest"&gt;
  &lt;forest-id&gt;12434840716430044697&lt;/forest-id&gt;
  &lt;current-time&gt;2007-02-16T19:00:00.708-08:00&lt;/current-time&gt;
  &lt;stands-counts&gt;
    &lt;stand-counts&gt;
      &lt;stand-id&gt;15174447282968484759&lt;/stand-id&gt;
      &lt;path&gt;c:\Program Files\MarkLogic\Data\Forests\Documents\00000016&lt;/path&gt;
      &lt;active-fragment-count&gt;146&lt;/active-fragment-count&gt;
      &lt;nascent-fragment-count&gt;0&lt;/nascent-fragment-count&gt;
      &lt;deleted-fragment-count&gt;0&lt;/deleted-fragment-count&gt;
    &lt;/stand-counts&gt;
  &lt;/stands-counts&gt;
  &lt;document-count&gt;67&lt;/document-count&gt;
  &lt;directory-count&gt;3&lt;/directory-count&gt;
&lt;/forest-counts&gt;
 </pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.forestCounts(xdmp.forest("Documents"));
=&gt;
{
  "forestId": "18080252238750949856",
  "forestName": "Documents",
  "currentTime": "2015-01-09T11:08:36.008846-08:00",
  "standsCounts":
  [
   {
    "standId": "10599000637920689925",
    "path": "/var/opt/MarkLogic/Forests/Documents/00000026",
    "activeFragmentCount": 32,
    "nascentFragmentCount": 0,
    "deletedFragmentCount": 4
   }
  ]
  ,
  "documentCount": 16,
  "directoryCount": 0
}

 </pre>
</apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
(: only calculate the document count :)
xdmp:forest-counts(xdmp:forest("Documents"), ("document-count"))
=&gt;
&lt;forest-counts xmlns="http://marklogic.com/xdmp/status/forest"&gt;
  &lt;forest-id&gt;11656884323633926637&lt;/forest-id&gt;
  &lt;forest-name&gt;Documents&lt;/forest-name&gt;
  &lt;current-time&gt;2008-03-18T16:22:34.082-07:00&lt;/current-time&gt;
  &lt;document-count&gt;1070&lt;/document-count&gt;
&lt;/forest-counts&gt;

 </pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
// only calculate the document count 
xdmp.forestCounts(xdmp.forest("Documents"), ["document-count"]);
=&gt;
{
  "forestId": "18080252238750949856",
  "forestName": "Documents",
  "currentTime": "2015-01-09T11:13:35.642748-08:00",
  "documentCount": 16
}

 </pre>
</apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
(: force everything to be calculated :)
xdmp:forest-counts(xdmp:forest("Documents"), "*")
=&gt;
 the full output of xdmp:forest-counts

 </pre>
</apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
// force everything to be calculated 
xdmp.forestCounts(xdmp.forest("Documents"), "*");
=&gt;
 the full output of xdmp:forest-counts

{
  "forestId": "18080252238750949856",
  "forestName": "Documents",
  "currentTime": "2015-01-09T11:14:19.665315-08:00",
  "standsCounts":
  [
   {
    "standId": "10599000637920689925",
    "path": "/var/opt/MarkLogic/Forests/Documents/00000026",
    "activeFragmentCount": 32,
    "nascentFragmentCount": 0,
    "deletedFragmentCount": 4
   }
  ]
  ,
  "documentCount": 16,
  "directoryCount": 0, 
  ......
  ..... all of the other reindex counts
  ......
}

 </pre>
</apidoc:example>
  </apidoc:function><apidoc:function name="request-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  <p xmlns="http://www.w3.org/1999/xhtml">
  Returns the status of a running request <span class="javascript">as
  a ValueIterator of ObjectNodes</span>.  If the request ID is that of
  the calling request, then no special permission is required.  If the
  ID is for another request, then the calling request needs
  <code>http://marklogic.com/xdmp/privileges/status</code> permission.
  </p>
  <p xmlns="http://www.w3.org/1999/xhtml">
  The result of this builtin is exactly equivalent to
  <code>xdmp:server-status(xdmp:host(), xdmp:server())//*:request-status[*:request-id = $req]</code>,
  where <code>$req</code> is the ID of the request
  you are interested in.
  </p>
  <p xmlns="http://www.w3.org/1999/xhtml">
  In the 3.2 release this builtin is not cluster-aware, the
  first argument (host ID) must be the same as the value returned
  by <code>xdmp:host()</code>.  If you wish to obtain the status of a request
  running on a remote host, use the code snippet above to obtain
  the request status using <code>xdmp:server-status()</code>.
  </p>
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong">
    A host ID.  Must be the ID of the local host.
  </apidoc:param>
      <apidoc:param name="server-id" type="xs:unsignedLong">
    A server ID (HTTP, XDBC, ODBC, webDAV, or Task).
  </apidoc:param>
      <apidoc:param name="request-id" type="xs:unsignedLong*">
    One or more request IDs.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(request-status)*</apidoc:return>
    <apidoc:return class="javascript">ValueIterator</apidoc:return>
    <apidoc:privilege>
  http://marklogic.com/xdmp/privileges/status
</apidoc:privilege>
    <apidoc:usage schema="server-status.xsd" camel-case="true">
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:request-status(xdmp:host(), xdmp:server(), xdmp:request())
=&gt;
&lt;request-status xmlns="http://marklogic.com/xdmp/status/server"&gt;
  &lt;request-id&gt;17571547553153953696&lt;/request-id&gt;
  &lt;server-id&gt;6979985792045178484&lt;/server-id&gt;
  &lt;host-id&gt;2612493919508853477&lt;/host-id&gt;
  &lt;transaction-id&gt;2978550460365092692&lt;/transaction-id&gt;
  &lt;canceled&gt;false&lt;/canceled&gt;
  &lt;modules&gt;0&lt;/modules&gt;
  &lt;database&gt;13419866041652476886&lt;/database&gt;
  &lt;root&gt;Apps/&lt;/root&gt;
  &lt;request-kind&gt;invoke&lt;/request-kind&gt;
  &lt;request-text&gt;/qconsole/endpoints/eval.xqy&lt;/request-text&gt;
  &lt;request-rewritten-text&gt;/qconsole/endpoints/eval.xqy?sid=
     6693979901326946703&amp;amp;resulttype=text&amp;amp;qid=
     2507225313416696807&amp;amp;cache=1363814207307&lt;/request-rewritten-text&gt;
  &lt;update&gt;false&lt;/update&gt;
  &lt;start-time&gt;2013-03-20T14:16:47.326-07:00&lt;/start-time&gt;
  &lt;time-limit&gt;600&lt;/time-limit&gt;
  &lt;max-time-limit&gt;1440&lt;/max-time-limit&gt;
  &lt;user&gt;893641342095093063&lt;/user&gt;
  &lt;client-address&gt;127.0.0.1&lt;/client-address&gt;
  &lt;trigger-depth&gt;0&lt;/trigger-depth&gt;
  &lt;expanded-tree-cache-hits&gt;2&lt;/expanded-tree-cache-hits&gt;
  &lt;expanded-tree-cache-misses&gt;0&lt;/expanded-tree-cache-misses&gt;
  &lt;request-state&gt;running&lt;/request-state&gt;
  &lt;profiling-allowed&gt;true&lt;/profiling-allowed&gt;
  &lt;profiling-enabled&gt;false&lt;/profiling-enabled&gt;
  &lt;debugging-allowed&gt;true&lt;/debugging-allowed&gt;
  &lt;debugging-status&gt;detached&lt;/debugging-status&gt;
  &lt;retry-count&gt;0&lt;/retry-count&gt;
&lt;/request-status&gt;
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.requestStatus(xdmp.host(), xdmp.server(), xdmp.request());
=&gt;
{
 "requestId": "9833232389754205407",
 "serverId": "536121115905064034",
 "hostId": "2485368722774099257",
 "transactionId": "6714524514889161071",
 "canceled": false,
 "modules": 0,
 "database": "12466402192567279933",
 "root": "Apps/",
 "requestKind": "invoke",
 "requestText": "/qconsole/endpoints/evaljs.sjs",
 "requestRewrittenText": "/qconsole/endpoints/evaljs.sjs?sid=
	 18127344729549022960&amp;qid=4268464128679030683&amp;crid=
	 9862289152&amp;querytype=javascript&amp;action=eval&amp;cache=1418875622481",
 "update": false,
 "startTime": "2014-12-17T20:07:02.496789-08:00",
 "timeLimit": 600,
 "maxTimeLimit": 3600,
 "user": "7071164303237443533",
 "clientAddress": "172.16.19.129",
 "triggerDepth": 0,
 "expandedTreeCacheHits": 0,
 "expandedTreeCacheMisses": 0,
 "requestState": "running",
 "profilingAllowed": true,
 "profilingEnabled": false,
 "debuggingAllowed": true,
 "debuggingStatus": "detached",
 "retryCount": 0
}

</pre></apidoc:example>
  </apidoc:function><apidoc:function name="foreign-cluster-status" type="builtin" lib="xdmp" category="Server Monitoring">
    <apidoc:summary>
  Returns the status of a foreign cluster from a host's point of view<span class="javascript" xmlns="http://www.w3.org/1999/xhtml"> as a JSON node</span>.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="host-id" type="xs:unsignedLong">
    A host ID.
  </apidoc:param>
      <apidoc:param name="foreign-cluster-id" type="xs:unsignedLong">
    A foreign cluster ID.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element(foreign-cluster-status)</apidoc:return>
    <apidoc:return class="javascript">ObjectNode</apidoc:return>
    <apidoc:privilege>
   <code xmlns="http://www.w3.org/1999/xhtml">http://marklogic.com/xdmp/privileges/status</code>
</apidoc:privilege>
    <apidoc:usage schema="foreign-cluster-status.xsd" camel-case="true">
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xquery version "1.0-ml";

import module namespace admin = "http://marklogic.com/xdmp/admin" 
      at "/MarkLogic/admin.xqy";

xdmp:foreign-cluster-status(
  xdmp:host(),
  admin:cluster-get-foreign-cluster-id(
    admin:get-configuration(), "SanFrancisco"))
=&gt;

&lt;foreign-cluster-status 
  xmlns="http://marklogic.com/xdmp/status/foreign-cluster"&gt;
&lt;/foreign-cluster-status&gt; 
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">

var admin = require("/MarkLogic/admin.xqy");

xdmp.foreignClusterStatus(
  xdmp.host(),
  admin.clusterGetForeignClusterId(
    admin.getConfiguration(), "SanFrancisco"));
=&gt;

&lt;foreign-cluster-status 
  xmlns="http://marklogic.com/xdmp/status/foreign-cluster"&gt;
&lt;/foreign-cluster-status&gt; 
</pre></apidoc:example>
  </apidoc:function></apidoc:module>