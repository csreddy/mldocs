<apidoc:module name="SSL" category="Extension" lib="ssl" xmlns:apidoc="http://marklogic.com/xdmp/apidoc"><apidoc:summary category="SSL" lib="ssl" access="public">
   <p xmlns="http://www.w3.org/1999/xhtml">The SSL built-in functions are miscellaneous extensions to the
   XQuery core library that expose SSL functionality.</p>
 </apidoc:summary><apidoc:function name="x509-certificate-extract" type="builtin" lib="xdmp" category="AppServerBuiltins">
    <apidoc:summary>
  Returns the XML representation of the specified X.509 certificate.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="cert" type="xs:string">
    The PEM encoded certificate.
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element()?</apidoc:return>
    <apidoc:return class="javascript">Object?</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xquery version "1.0-ml";

let $cert := "-----BEGIN CERTIFICATE-----
MIID4DCCA0mgAwIBAgIJAIp4RM8+Lkr3MA0GCSqGSIb3DQEBBQUAMIGnMQswCQYD
VQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTETMBEGA1UEBxMKU2FuIENhcmxv
czETMBEGA1UEChMKTWFyayBMb2dpYzEUMBIGA1UECxMLRW5naW5lZXJpbmcxHjAc
BgNVBAMTFUNlcnRpZmljYXRlIEF1dGhvcml0eTEjMCEGCSqGSIb3DQEJARYUd2Zl
aWNrQG1hcmtsb2dpYy5jb20wHhcNMDgxMjAzMDEyNzQ5WhcNMDkxMjAzMDEyNzQ5
WjCBpzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEzARBgNVBAcT
ClNhbiBDYXJsb3MxEzARBgNVBAoTCk1hcmsgTG9naWMxFDASBgNVBAsTC0VuZ2lu
ZWVyaW5nMR4wHAYDVQQDExVDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgkqhkiG
9w0BCQEWFHdmZWlja0BtYXJrbG9naWMuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GN
ADCBiQKBgQDnauIbA33nIH8IpiUyWA9sB/X3d8DU8cKbEes1dk6xX3mFfMWja56D
vkPFaX9/voSbeG1E92d2Y518xvjgoR8okf2rkDI35nqA9ejcuC0wg0tXuh5OSVfr
UpzVSwbCy55fweaVzkKC2TZXgOy5JeNbw+i/UohTLW2TPwQ4rpynPwIDAQABo4IB
EDCCAQwwHQYDVR0OBBYEFLY2z4PX7fWY47gRhGpVJBIJpufYMIHcBgNVHSMEgdQw
gdGAFLY2z4PX7fWY47gRhGpVJBIJpufYoYGtpIGqMIGnMQswCQYDVQQGEwJVUzET
MBEGA1UECBMKQ2FsaWZvcm5pYTETMBEGA1UEBxMKU2FuIENhcmxvczETMBEGA1UE
ChMKTWFyayBMb2dpYzEUMBIGA1UECxMLRW5naW5lZXJpbmcxHjAcBgNVBAMTFUNl
cnRpZmljYXRlIEF1dGhvcml0eTEjMCEGCSqGSIb3DQEJARYUd2ZlaWNrQG1hcmts
b2dpYy5jb22CCQCKeETPPi5K9zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA
A4GBAA8/lJQK6NmHFvP85LS3Sdfnd9D9opDeehqv4LfoFWxHMiKsxSA7hrYRs6u9
qQxCED54UfB1+kjs2GrM4H1uWeeHADdUKDRVHcivCVqWP4GUD2r0upKj8C3UD46V
aNHLW0yW7Anf4DMBsfhvKfIopBDoP6NPbDith5RtmM98N8xn
-----END CERTIFICATE-----"

return xdmp:x509-certificate-extract($cert)

=&gt;

&lt;cert&gt;
  &lt;version&gt;2&lt;/version&gt;
  &lt;serialNumber&gt;8A7844CF3E2E4AF7&lt;/serialNumber&gt;
  &lt;signatureType&gt;sha1WithRSAEncryption&lt;/signatureType&gt;
  &lt;issuer&gt;
    &lt;countryName&gt;US&lt;/countryName&gt;
    &lt;stateOrProvinceName&gt;California&lt;/stateOrProvinceName&gt;
    &lt;localityName&gt;San Carlos&lt;/localityName&gt;
    &lt;organizationName&gt;MarkLogic&lt;/organizationName&gt;
    &lt;organizationalUnitName&gt;Engineering&lt;/organizationalUnitName&gt;
    &lt;commonName&gt;Certificate Authority&lt;/commonName&gt;
    &lt;emailAddress&gt;me@marklogic.com&lt;/emailAddress&gt;
  &lt;/issuer&gt;
  &lt;validity&gt;
    &lt;notBefore&gt;2008-12-03T01:27:49Z&lt;/notBefore&gt;
    &lt;notAfter&gt;2009-12-03T01:27:49Z&lt;/notAfter&gt;
  &lt;/validity&gt;
  &lt;subject&gt;
    &lt;countryName&gt;US&lt;/countryName&gt;
    &lt;stateOrProvinceName&gt;California&lt;/stateOrProvinceName&gt;
    &lt;localityName&gt;San Carlos&lt;/localityName&gt;
    &lt;organizationName&gt;MarkLogic&lt;/organizationName&gt;
    &lt;organizationalUnitName&gt;Engineering&lt;/organizationalUnitName&gt;
    &lt;commonName&gt;Certificate Authority&lt;/commonName&gt;
    &lt;emailAddress&gt;me@marklogic.com&lt;/emailAddress&gt;
  &lt;/subject&gt;
  &lt;publicKey&gt;-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnauIbA33nIH8IpiUyWA9sB/X3
d8DU8cKbEes1dk6xX3mFfMWja56DvkPFaX9/voSbeG1E92d2Y518xvjgoR8okf2r
kDI35nqA9ejcuC0wg0tXuh5OSVfrUpzVSwbCy55fweaVzkKC2TZXgOy5JeNbw+i/
UohTLW2TPwQ4rpynPwIDAQAB
-----END PUBLIC KEY-----
&lt;/publicKey&gt;
  &lt;v3ext&gt;
    &lt;subjectKeyIdentifier critical="false"&gt;B6:36:CF:83:D7:ED:F5:98:E3:B8:11:84:6A:55:24:12:09:A6:E7:D8&lt;/subjectKeyIdentifier&gt;
    &lt;authorityKeyIdentifier critical="false"&gt;keyid:B6:36:CF:83:D7:ED:F5:98:E3:B8:11:84:6A:55:24:12:09:A6:E7:D8
DirName:/C=US/ST=California/L=San Carlos/O=MarkLogic/OU=Engineering/CN=Certificate Authority/emailAddress=me@marklogic.com
serial:8A:78:44:CF:3E:2E:4A:F7
&lt;/authorityKeyIdentifier&gt;
    &lt;basicConstraints critical="false"&gt;CA:TRUE&lt;/basicConstraints&gt;
  &lt;/v3ext&gt;
&lt;/cert&gt;

  </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
var cert = "-----BEGIN CERTIFICATE-----\n\
MIID4DCCA0mgAwIBAgIJAIp4RM8+Lkr3MA0GCSqGSIb3DQEBBQUAMIGnMQswCQYD\n\
VQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTETMBEGA1UEBxMKU2FuIENhcmxv\n\
czETMBEGA1UEChMKTWFyayBMb2dpYzEUMBIGA1UECxMLRW5naW5lZXJpbmcxHjAc\n\
BgNVBAMTFUNlcnRpZmljYXRlIEF1dGhvcml0eTEjMCEGCSqGSIb3DQEJARYUd2Zl\n\
aWNrQG1hcmtsb2dpYy5jb20wHhcNMDgxMjAzMDEyNzQ5WhcNMDkxMjAzMDEyNzQ5\n\
WjCBpzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEzARBgNVBAcT\n\
ClNhbiBDYXJsb3MxEzARBgNVBAoTCk1hcmsgTG9naWMxFDASBgNVBAsTC0VuZ2lu\n\
ZWVyaW5nMR4wHAYDVQQDExVDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgkqhkiG\n\
9w0BCQEWFHdmZWlja0BtYXJrbG9naWMuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GN\n\
ADCBiQKBgQDnauIbA33nIH8IpiUyWA9sB/X3d8DU8cKbEes1dk6xX3mFfMWja56D\n\
vkPFaX9/voSbeG1E92d2Y518xvjgoR8okf2rkDI35nqA9ejcuC0wg0tXuh5OSVfr\n\
UpzVSwbCy55fweaVzkKC2TZXgOy5JeNbw+i/UohTLW2TPwQ4rpynPwIDAQABo4IB\n\
EDCCAQwwHQYDVR0OBBYEFLY2z4PX7fWY47gRhGpVJBIJpufYMIHcBgNVHSMEgdQw\n\
gdGAFLY2z4PX7fWY47gRhGpVJBIJpufYoYGtpIGqMIGnMQswCQYDVQQGEwJVUzET\n\
MBEGA1UECBMKQ2FsaWZvcm5pYTETMBEGA1UEBxMKU2FuIENhcmxvczETMBEGA1UE\n\
ChMKTWFyayBMb2dpYzEUMBIGA1UECxMLRW5naW5lZXJpbmcxHjAcBgNVBAMTFUNl\n\
cnRpZmljYXRlIEF1dGhvcml0eTEjMCEGCSqGSIb3DQEJARYUd2ZlaWNrQG1hcmts\n\
b2dpYy5jb22CCQCKeETPPi5K9zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA\n\
A4GBAA8/lJQK6NmHFvP85LS3Sdfnd9D9opDeehqv4LfoFWxHMiKsxSA7hrYRs6u9\n\
qQxCED54UfB1+kjs2GrM4H1uWeeHADdUKDRVHcivCVqWP4GUD2r0upKj8C3UD46V\n\
aNHLW0yW7Anf4DMBsfhvKfIopBDoP6NPbDith5RtmM98N8xn\n\
-----END CERTIFICATE-----";
xdmp.x509CertificateExtract(cert);

=&gt;

{
  "version":"2",
  "serialNumber":"8A7844CF3E2E4AF7",
  "signatureType":"sha1WithRSAEncryption",
  "issuer":{
    "countryName":"US",
    "stateOrProvinceName":"California",
    "localityName":"San Carlos",
    "organizationName":"Mark Logic",
    "organizationalUnitName":"Engineering",
    "commonName":"Certificate Authority",
    "emailAddress":"wfeick@marklogic.com"
  },
  "validity":{
    "notBefore":"2008-12-03T01:27:49Z",
    "notAfter":"2009-12-03T01:27:49Z"
  },
  "subject":{
    "countryName":"US",
    "stateOrProvinceName":"California",
    "localityName":"San Carlos",
    "organizationName":"Mark Logic",
    "organizationalUnitName":"Engineering",
    "commonName":"Certificate Authority",
    "emailAddress":"wfeick@marklogic.com"
  },
  "publicKey":"-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnauIbA33nIH8IpiUyWA9sB/X3
d8DU8cKbEes1dk6xX3mFfMWja56DvkPFaX9/voSbeG1E92d2Y518xvjgoR8okf2r
kDI35nqA9ejcuC0wg0tXuh5OSVfrUpzVSwbCy55fweaVzkKC2TZXgOy5JeNbw+i/
UohTLW2TPwQ4rpynPwIDAQAB
-----END PUBLIC KEY-----
",
  "v3ext":[
    {
      "critical":false,
      "subjectKeyIdentifier":"B6:36:CF:83:D7:ED:F5:98:E3:B8:11:84:6A:55:24:12:09:A6:E7:D8"
    },
    {
      "critical":false,
      "authorityKeyIdentifier":"keyid:B6:36:CF:83:D7:ED:F5:98:E3:B8:11:84:6A:55:24:12:09:A6:E7:D8
DirName:/C=US/ST=California/L=San Carlos/O=Mark Logic/OU=Engineering/CN=Certificate Authority/emailAddress=wfeick@marklogic.com
serial:8A:78:44:CF:3E:2E:4A:F7
"
    },
    {
      "critical":false,
      "basicConstraints":"CA:TRUE"
    }
  ]
}
</pre></apidoc:example>
  </apidoc:function><apidoc:function name="md5" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the md5 hash of the given argument.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="data" type="item()">
    Data to be hashed. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:md5("foo")
  =&gt; "acbd18db4cc2f85cedef654fccc4a4d8"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:md5("foo", "base64")
  =&gt; "rL0Y20zC+Fzt72VPzMSk2A=="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.md5("foo");
  =&gt; "acbd18db4cc2f85cedef654fccc4a4d8"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.md5("foo", "base64");
  =&gt; "rL0Y20zC+Fzt72VPzMSk2A=="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="hmac-md5" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the Hash-based Message Authentication Code (HMAC) using the md5 hash function of the given secret key and message arguments.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="secretkey" type="item()">
    The secret key. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="message" type="item()">
    Message to be authenticated. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-md5("foo", "bar")
  =&gt; "0c7a250281315ab863549f66cd8a3a53"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-md5("foo", "bar", "base64")
  =&gt; "DHolAoExWrhjVJ9mzYo6Uw=="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacMd5("foo", "bar");
  =&gt; "0c7a250281315ab863549f66cd8a3a53"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacMd5("foo", "bar", "base64")
  =&gt; "DHolAoExWrhjVJ9mzYo6Uw=="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="sha1" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the SHA1 hash of the given argument.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="data" type="item()">
    Data to be hashed. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:usage>
   <p xmlns="http://www.w3.org/1999/xhtml">This function can only be run in non-FIPS mode. In FIPS mode,
   you can use xdmp:hmac-sha1() instead.  In FIPS mode, it throws
   XDMP-FIPSWEAKHASH.</p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha1("foo")
  =&gt; "0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha1("foo", "base64")
  =&gt; "C+7Hteo/D9vJXQ3UfzxbwnXaijM="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha1("foo");
  =&gt; "0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha1("foo", "base64");
  =&gt; "C+7Hteo/D9vJXQ3UfzxbwnXaijM="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="hmac-sha1" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the Hash-based Message Authentication Code (HMAC) using the SHA1 hash function of the given secret key and message arguments.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="secretkey" type="item()">
    The secret key. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="message" type="item()">
    Message to be authenticated. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha1("foo", "bar")
  =&gt; "46b4ec586117154dacd49d664e5d63fdc88efb51"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha1("foo", "bar", "base64")
  =&gt; "RrTsWGEXFU2s1J1mTl1j/ciO+1E="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha1("foo", "bar");
  =&gt; "46b4ec586117154dacd49d664e5d63fdc88efb51"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha1("foo", "bar", "base64");
  =&gt; "RrTsWGEXFU2s1J1mTl1j/ciO+1E="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="sha256" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the SHA256 hash of the given argument.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="data" type="item()">
    Data to be hashed. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:usage>
   <p xmlns="http://www.w3.org/1999/xhtml">This function can only be run in non-FIPS mode. In FIPS mode,
   you can use xdmp:hmac-sha256() instead.   In FIPS mode, it throws
   XDMP-FIPSWEAKHASH.</p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha256("foo")
  =&gt; "2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha256("foo", "base64")
  =&gt; "LCa0a2j/xo/5m0U8HTBBNBNCLXBkg7+g+YpeiGJm564="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha256("foo");
  =&gt; "2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha256("foo", "base64");
  =&gt; "LCa0a2j/xo/5m0U8HTBBNBNCLXBkg7+g+YpeiGJm564="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="hmac-sha256" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the Hash-based Message Authentication Code (HMAC) using the SHA256 hash function of the given secret key and message arguments.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="secretkey" type="item()">
    The secret key. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="message" type="item()">
    Message to be authenticated. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha256("foo", "bar")
  =&gt; "f9320baf0249169e73850cd6156ded0106e2bb6ad8cab01b7bbbebe6d1065317"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha256("foo", "bar", "base64")
  =&gt; "+TILrwJJFp5zhQzWFW3tAQbiu2rYyrAbe7vr5tEGUxc="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha256("foo", "bar");
  =&gt; "f9320baf0249169e73850cd6156ded0106e2bb6ad8cab01b7bbbebe6d1065317"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha256("foo", "bar", "base64");
  =&gt; "+TILrwJJFp5zhQzWFW3tAQbiu2rYyrAbe7vr5tEGUxc="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="sha384" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the SHA384 hash of the given argument.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="data" type="item()">
    Data to be hashed. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:usage>
   <p xmlns="http://www.w3.org/1999/xhtml">This function can only be run in non-FIPS mode.  In FIPS mode, it throws
   XDMP-FIPSWEAKHASH.</p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha384("foo")
  =&gt; "f7fbba6e0636f890e56fbbf3283e524c6fa3204ae298382d624741d0dc6638326e\
      282c41be5e4254d8820772c5518a2c5a8c0c7f7eda19594a7eb539453e1ed7"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha384("foo", "base64")
  =&gt; "9/u6bgY2+JDlb7vzKD5STG+jIErimDgtYkdB0NxmODJuKCxBvl5CVNiCB3LFUYos\
      WowMf37aGVlKfrU5RT4e1w=="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha384("foo");
  =&gt; "f7fbba6e0636f890e56fbbf3283e524c6fa3204ae298382d624741d0dc6638326e\
      282c41be5e4254d8820772c5518a2c5a8c0c7f7eda19594a7eb539453e1ed7"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha384("foo", "base64");
  =&gt; "9/u6bgY2+JDlb7vzKD5STG+jIErimDgtYkdB0NxmODJuKCxBvl5CVNiCB3LFUYos\
      WowMf37aGVlKfrU5RT4e1w=="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="sha512" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the SHA512 hash of the given argument.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="data" type="item()">
    Data to be hashed. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:usage>
   <p xmlns="http://www.w3.org/1999/xhtml">This function can only be run in non-FIPS mode. In FIPS mode,
   you can use xdmp:hmac-sha512() instead.  In FIPS mode, it throws
   XDMP-FIPSWEAKHASH. </p>
</apidoc:usage>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha512("foo")
  =&gt; "f7fbba6e0636f890e56fbbf3283e524c6fa3204ae298382d624741d0dc6638326e\
      282c41be5e4254d8820772c5518a2c5a8c0c7f7eda19594a7eb539453e1ed7"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:sha512("foo", "base64")
  =&gt; "9/u6bgY2+JDlb7vzKD5STG+jIErimDgtYkdB0NxmODJuKCxBvl5CVNiCB3LFUYos\
      WowMf37aGVlKfrU5RT4e1w=="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha512("foo");
  =&gt; "f7fbba6e0636f890e56fbbf3283e524c6fa3204ae298382d624741d0dc6638326e\
      282c41be5e4254d8820772c5518a2c5a8c0c7f7eda19594a7eb539453e1ed7"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.sha512("foo", "base64");
  =&gt; "9/u6bgY2+JDlb7vzKD5STG+jIErimDgtYkdB0NxmODJuKCxBvl5CVNiCB3LFUYos\
      WowMf37aGVlKfrU5RT4e1w=="
 </pre></apidoc:example>
  </apidoc:function><apidoc:function name="hmac-sha512" type="builtin" lib="xdmp" category="Extension" subcategory="Extension">
    <apidoc:summary>
  Calculates the Hash-based Message Authentication Code (HMAC) using the SHA512   hash function of the given secret key and message arguments.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="secretkey" type="item()">
    The secret key. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="message" type="item()">
    Message to be authenticated. Must be xs:string or a binary node.
  </apidoc:param>
      <apidoc:param name="encoding" type="xs:string" optional="true">
    Encoding format for the output string, must be "hex" for hexadecimal
    or "base64". Default is "hex".
  </apidoc:param>
    </apidoc:params>
    <apidoc:return>xs:string</apidoc:return>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha512("foo", "bar")
  =&gt; "114682914c5d017dfe59fdc804118b56a3a652a0b8870759cf9e792ed7426b08197076\
      bf7d01640b1b0684df79e4b67e37485669e8ce98dbab60445f0db94fce"
 </pre></apidoc:example>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp:hmac-sha512("foo", "bar", "base64")
  =&gt; "EUaCkUxdAX3+Wf3IBBGLVqOmUqC4hwdZz555LtdCawgZcHa/fQFkCxsGhN955LZ\
      +N0hWaejOmNurYERfDblPzg=="
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha512("foo", "bar");
  =&gt; "114682914c5d017dfe59fdc804118b56a3a652a0b8870759cf9e792ed7426b08197076\
      bf7d01640b1b0684df79e4b67e37485669e8ce98dbab60445f0db94fce"
 </pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
  xdmp.hmacSha512("foo", "bar", "base64");
  =&gt; "EUaCkUxdAX3+Wf3IBBGLVqOmUqC4hwdZz555LtdCawgZcHa/fQFkCxsGhN955LZ\
      +N0hWaejOmNurYERfDblPzg=="
 </pre></apidoc:example>
  </apidoc:function></apidoc:module>